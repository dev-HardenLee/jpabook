<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">

    <persistence-unit name="jpabook">

        <properties>

            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver"   value="org.h2.Driver"                   />
            <property name="javax.persistence.jdbc.user"     value="sa"                              />
            <property name="javax.persistence.jdbc.password" value=""                                />
            <property name="javax.persistence.jdbc.url"      value="jdbc:h2:tcp://localhost/~/test"  />
            <property name="hibernate.dialect"               value="org.hibernate.dialect.H2Dialect" />

            <!-- 옵션 -->
            <property name="hibernate.show_sql"                  value="true"  /> <!-- true로 설정하면 테이블 생성 DDL을 출력할 수 있다. -->
            <property name="hibernate.format_sql"                value="true"  />
            <property name="hibernate.use_sql_comments"          value="true"  />
            <!-- 키 생성 전략을 사용하려면 hibernate.id.new_generator_mappings 속성을 반드시 true로 해야한다. 하이버네이트는 JPA규격에 맞는 새로운 키 생성 전략을 개발했는데, 과거 버전과의 호환성을 유지하기 위해 기본값이 false이다. -->
            <!-- 기존 하이버네이트 시스템을 유지보수하는 것이 아니라면 반드시 true로 설정하자. -->
            <property name="hibernate.id.new_generator_mappings" value="true"  /> 
            <property name="hibernate.hbm2ddl.auto"              value="create"/> <!-- 애플리케이션 실행 시점에 데이터베이스 테이블을 자동으로 생성한다. -->
            <!-- hibernate.hbm2ddl.auto 속성 정리. -->
            <!-- create      : 기존 테이블을 삭제하고 새로 생성한다. DROP + CREATE -->
            <!-- create-drop : create 속성에 추가로 애플리케이션을 종료할 때 생성한 DDL을 제거한다. DROP + CREATE + DROP -->
            <!-- update      : 데이터베이스 테이블과 엔티티 매핑정보를 비교해서 변경사항만 수정한다. -->
            <!-- validate    : 데이터베이스 테이블과 엔티티 매핑 정보를 비교해서 차이가 있으면 경고를 남기고 애플리케이션을 실행하지 않는다. 이 설정은 DDL을 수정하지 않는다. -->
            <!-- none        : 자동 생성 기능을 사용하지 않으려면 속성 자체를 삭제하거나 유효하지 않은 옵션 값을 주면 된다.(none은 유효하지 않은 옵션값이다.) -->
            
            <!-- hibernate.hbm2ddl.auto 추천 전략 -->
            <!-- 	- 개발 초기 단계는 create 또는 update -->
            <!-- 	- 초기화 상태로 자동화된 테스트를 진행하는 개발자 환경과, CI서버는 create 또는 create-drop -->
            <!-- 	- 테스트 서버는 update 또는 validate -->
            <!-- 	- 스테이징과 운영 서버는 validate 또는 none -->
            
            <!-- 기본 매핑 이름 -->
            <!-- ImprovedNamingStrategy 클래스는 테이블 명이나 컬럼 명이 생략되면 자바의 카멜 표기법을 테이블의 언더스코어 표기법으로 매핑해준다. -->
            <!-- <property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />  -->

        </properties>
    </persistence-unit>

</persistence>















